DROP TABLE organization CASCADE;
DROP TABLE team CASCADE;
DROP TABLE player CASCADE;
DROP TABLE team_roster;
DROP TABLE admin;
DROP TABLE tournament;

CREATE EXTENSION IF NOT EXISTS "uuid-ossp";  

CREATE TABLE organization(
	ID uuid DEFAULT uuid_generate_v4(),
	NAME VARCHAR(45) NOT NULL,
	IMAGE VARCHAR(500),
	INFO VARCHAR(1000),
	MAIN_COLOR VARCHAR(20) DEFAULT 'FFFFFF',
	APPROVAL_STATUS VARCHAR(20) NOT NULL DEFAULT 'UNAPPROVED',
	DATE_CREATED timestamp DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY(ID)
);

CREATE TABLE admin(
	AUTH_ID VARCHAR(30),
	FIRST_NAME VARCHAR(45),
	LAST_NAME VARCHAR(45),
	LANGUAGE VARCHAR(45) NOT NULL,
	EMAIL_ADDRESS VARCHAR(80),
	ROLE VARCHAR(15) NOT NULL DEFAULT 'WORKER',
	STATUS VARCHAR(20) NOT NULL DEFAULT 'ACTIVE',
	DATE_CREATED TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	organization_ID uuid NOT NULL,
	PRIMARY KEY(AUTH_ID),
	CONSTRAINT fk_organization_admin 
		FOREIGN KEY(organization_id) 
		REFERENCES organization(id) 
		ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS team(
	ID SERIAL NOT NULL,
	NAME VARCHAR(45) NOT NULL,
	WINS SMALLINT DEFAULT 0,
	TIES SMALLINT NOT NULL DEFAULT 0,
	LOSSES SMALLINT NOT NULL DEFAULT 0,
	IMAGE VARCHAR(500),
	VISIBILITY VARCHAR(20) NOT NULL DEFAULT 'PRIVATE',
	SPORT VARCHAR(20) NOT NULL,
	GENDER VARCHAR(20) NOT NULL,
	SPORTSMANSHIP_SCORE DECIMAL NOT NULL DEFAULT 4.0,
	STATUS VARCHAR(20) NOT NULL,
	MAX_TEAM_SIZE SMALLINT,
	DATE_CREATED TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	bracket_ID INTEGER,
	organization_ID uuid NOT NULL,
	PRIMARY KEY(ID),
	CONSTRAINT fk_organization_team 
		FOREIGN KEY(bracket_ID) 
		REFERENCES bracket(id) 
		ON DELETE CASCADE,
	CONSTRAINT fk_bracket_team
		FOREIGN KEY(organization_id) 
		REFERENCES organization(id) 
		ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS player (
	AUTH_ID VARCHAR(30) NOT NULL,
	FIRST_NAME VARCHAR(45),
	LAST_NAME VARCHAR(45),
	LANGUAGE VARCHAR(45) NOT NULL DEFAULT 'ENGLISH',
	STATUS VARCHAR(20) NOT NULL DEFAULT 'ACTIVE',
	DATE_CREATED TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	GENDER VARCHAR(10),
	EMAIL_ADDRESS VARCHAR(80),
	DOB DATE,
	VISIBILITY VARCHAR(15) NOT NULL DEFAULT 'PRIVATE',
	GRADUATION_TERM VARCHAR(30),
	IMAGE VARCHAR(500),
	organization_ID uuid NOT NULL, 
	PRIMARY KEY(AUTH_ID),
	CONSTRAINT fk_organization_player
		FOREIGN KEY(organization_id) 
		REFERENCES organization(id) 
		ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS team_roster(
	player_AUTH_ID VARCHAR(30) NOT NULL,  
	team_ID INTEGER NOT NULL,
	ROLE VARCHAR(20) NOT NULL DEFAULT 'PLAYER',
	PRIMARY KEY (player_AUTH_ID, team_ID),
	CONSTRAINT fk_player_on_team_roster
		FOREIGN KEY(player_AUTH_ID)
		REFERENCES player(AUTH_ID)
		ON DELETE CASCADE
		ON UPDATE NO ACTION,
	CONSTRAINT fk_team_team_roster
		FOREIGN KEY(team_ID)
		REFERENCES team(ID)
		ON DELETE CASCADE
		ON UPDATE NO ACTION
);

CREATE TABLE IF NOT EXISTS tournament(
	ID SERIAL NOT NULL,
	NAME VARCHAR(45) NOT NULL,
	VISIBILITY VARCHAR(15) NOT NULL DEFAULT 'PRIVATE',
	STATUS VARCHAR(15) NOT NULL DEFAULT 'INACTIVE',
	NUMBER_OF_TEAMS INTEGER NOT NULL,
	DATE_CREATED TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	START_DATE DATE NOT NULL,
	END_DATE DATE NOT NULL, 
	TOURNAMENT_TYPE VARCHAR(15) NOT NULL DEFAULT 'SINGLE',
	SEED_TYPE VARCHAR(15) NOT NULL DEFAULT 'RANDOM',
	SPORT VARCHAR(45) NOT NULL,
	organization_ID uuid NOT NULL,
	PRIMARY KEY(ID),
	CONSTRAINT fk_organization_tournament
		FOREIGN KEY(organization_id)
		REFERENCES organization(id)
		ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS tournament_game(
	ID SERIAL NOT NULL,
	DATE_CREATED TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	GAME_DATE TIMESTAMP,
	LOCATION VARCHAR(100) NOT NULL,
	LOCATION_DETAILS TEXT,
	SCORE_HOME INTEGER NOT NULL DEFAULT 0,
	SCORE_AWAY INTEGER NOT NULL DEFAULT 0,
	SEED_HOME INTEGER NOT NULL DEFAULT 0,
	SEED_AWAY INTEGER NOT NULL DEFAULT 0,
	STATUS_HOME VARCHAR(20) NOT NULL DEFAULT 'NOTPLAYED',
	STATUS_AWAY VARCHAR(20) NOT NULL DEFAULT 'NOTPLAYED',
	LEVEL INTEGER NOT NULL,
	ROUND INTEGER NOT NULL,
	HOME_TEAM_ID INTEGER,
	AWAY_TEAM_ID INTEGER,
	tournament_ID INTEGER NOT NULL,
	PRIMARY KEY(ID),
	CONSTRAINT fk_home_team_id_game
		FOREIGN KEY(HOME_TEAM_ID)
		REFERENCES team(ID)
		ON DELETE CASCADE,
	CONSTRAINT fk_away_team_id_game
		FOREIGN KEY(AWAY_TEAM_ID)
		REFERENCES team(ID)
		ON DELETE CASCADE,
	CONSTRAINT fk_tournament_id_game
		FOREIGN KEY(tournament_ID)
		REFERENCES tournament(ID)
		ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS team_join_requests(
	player_AUTH_ID VARCHAR(30) NOT NULL,
	team_ID INTEGER NOT NULL,
	REQUESTING_PLAYER_FULL_NAME VARCHAR(50) NOT NULL,
	TIME_SENT TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
	EXPIRATION_TIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP + INTERVAL '1 WEEK' NOT NULL,
	CONSTRAINT fk_player_on_team_requests
		FOREIGN KEY(player_AUTH_ID)
		REFERENCES player(AUTH_ID)
		ON DELETE CASCADE
		ON UPDATE NO ACTION,
	CONSTRAINT fk_team_team_requests
		FOREIGN KEY(team_ID)
		REFERENCES team(ID)
		ON DELETE CASCADE
		ON UPDATE NO ACTION
);

// this table would exist in Organization storage and would be accessed through an api
pre registration to check if the user email is authorized to participate in this 
Organization. This is not required and an Organization does not have to authorize their
registrations. It is also possible this could be stored as a separate table in intramu's 
internal database if the Organization allows it. This is a POC that will check users emails
as they to register.
CREATE TABLE IF NOT EXISTS poc_organization_email_list(
	EMAIL_ADDRESS VARCHAR(80) NOT NULL,
	organization_ID uuid NOT NULL,
	PRIMARY KEY(EMAIL_ADDRESS, organization_ID),
	CONSTRAINT fk_organization_email
		FOREIGN KEY(organization_ID)
		REFERENCES organization(ID)
		ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS player_invites(
	player_AUTH_ID VARCHAR(30) NOT NULL,
	team_ID INTEGER NOT NULL,
	REQUESTING_PLAYER_FULL_NAME VARCHAR(50) NOT NULL,
	REQUESTING_TEAM_NAME VARCHAR(40) NOT NULL,
	TIME_SENT TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
	EXPIRATION_TIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP + INTERVAL '1 WEEK' NOT NULL,
	CONSTRAINT fk_player_on_team_invites
		FOREIGN KEY(player_AUTH_ID)
		REFERENCES player(AUTH_ID)
		ON DELETE CASCADE
		ON UPDATE NO ACTION,
	CONSTRAINT fk_team_team_invites
		FOREIGN KEY(team_ID)
		REFERENCES team(ID)
		ON DELETE CASCADE
		ON UPDATE NO ACTION
);

CREATE TABLE IF NOT EXISTS contest(
	ID SERIAL NOT NULL,
	NAME VARCHAR(45) NOT NULL,
	VISIBILITY VARCHAR(20) NOT NULL DEFAULT 'PRIVATE',
	STATUS VARCHAR (20) NOT NULL DEFAULT 'INACTIVE',
	DATE_CREATED TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	START_DATE DATE NOT NULL,
	END_DATE DATE NOT NULL,
	PLAYOFF BOOLEAN NOT NULL DEFAULT TRUE,
	PLAYOFF_TYPE VARCHAR(20) DEFAULT 'PICKFORME',
	PLAYOFF_SEEDING_TYPE VARCHAR(20) DEFAULT 'INDEPENDENT',
	CONTEST_TYPE VARCHAR NOT NULL DEFAULT 'POINTS',
	organization_ID UUID NOT NULL,
	PRIMARY KEY(ID),
	CONSTRAINT fk_organization_contest
		FOREIGN KEY(organization_ID)
		REFERENCES organization(ID)
		ON DELETE CASCADE 
);

CREATE TABLE IF NOT EXISTS league(
	ID SERIAL NOT NULL,
	NAME VARCHAR(40),
	SPORT VARCHAR(40) NOT NULL,
	START_DATE DATE NOT NULL,
	END_DATE DATE NOT NULL,
	contest_ID SERIAL NOT NULL,
	organization_ID UUID NOT NULL,
	PRIMARY KEY(ID),
	CONSTRAINT fk_contest_league
		FOREIGN KEY(contest_ID)
		REFERENCES contest(ID)
		ON DELETE CASCADE,
	CONSTRAINT fk_organization_league
		FOREIGN KEY(organization_ID)
		REFERENCES organization(ID)
		ON DELETE CASCADE 
);

CREATE TABLE IF NOT EXISTS division(
	ID SERIAL NOT NULL,
	NAME VARCHAR(40),
	TYPE VARCHAR(10) NOT NULL,
	LEVEL VARCHAR(10) NOT NULL,
	MAX_TEAM_SIZE INTEGER NOT NULL,
	MIN_WOMEN_COUNT INTEGER NOT NULL,
	MIN_MEN_COUNT INTEGER NOT NULL,
	league_ID INTEGER NOT NULL,
	PRIMARY KEY(ID),
	CONSTRAINT fk_league_division
		FOREIGN KEY(league_ID)
		REFERENCES league(ID)
		ON DELETE CASCADE
);

// day choices are comma separated
CREATE TABLE IF NOT EXISTS bracket(
	ID SERIAL NOT NULL,
	DAY_CHOICES VARCHAR(50)[],
	TIME_CHOICES tmultirange,
	MAX_TEAM_AMOUNT INTEGER NOT NULL,
	division_ID INTEGER NOT NULL,
	PRIMARY KEY(ID),
	CONSTRAINT fk_division_bracket
		FOREIGN KEY(division_ID)
		REFERENCES division(ID)
		ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS bracket_time_slots(
	ID SERIAL NOT NULL,
	START_TIME TIME NOT NULL,
	END_TIME TIME NOT NULL,
	bracket_ID INTEGER NOT NULL,
	PRIMARY KEY(ID),
	CONSTRAINT fk_bracket_time_slots
		FOREIGN KEY(bracket_ID)
		REFERENCES bracket(ID)
		ON DELETE CASCADE
);

CREATE TABLE test_bracket(
	ID SERIAL NOT NULL,
	TIME_CHOICES tmultirange NOT NULL
);

CREATE TABLE test_bracket_two(
	ID SERIAL NOT NULL,
	TIME_CHOICES tsmultirange NOT NULL
);

CREATE TYPE trange AS RANGE (subtype = time, multirange_type_name = tmultirange);

with new_organization as (
	INSERT INTO organization (NAME, IMAGE, INFO, MAIN_COLOR) 
	VALUES 
		('Grand Canyon University', null, 'All the info', 'Purple') RETURNING id
),
new_team AS (
	INSERT INTO team (ID, NAME, IMAGE, SPORT, MAX_TEAM_SIZE, organization_id) 
	VALUES 
		(4, 'Team Anderson', null, 'Soccer', 12, (SELECT id FROM new_organization)),
		(10, 'F1', null, 'Soccer', 12, (SELECT id FROM new_organization)),
		(12, 'Affordable Christians', null, 'Soccer', 12, (SELECT id FROM new_organization))
),
new_admin AS(
	INSERT INTO admin(AUTH_ID, FIRST_NAME, LAST_NAME, LANGUAGE, EMAIL_ADDRESS, ROLE, organization_id) 
	VALUES 
		('test1', 'Noah', 'Roerig', 'ENGLISH', 'NRoerig@my.gcu.edu', 'MASTER', (SELECT id FROM new_organization)),
		('test2', 'Stevan', 'Perrino', 'ENGLISH', 'SPerrino@my.gcu.edu', 'WORKER', (SELECT id FROM new_organization))
),
new_player AS(
	INSERT INTO player(AUTH_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ADDRESS, DOB, GRADUATION_TERM, IMAGE, organization_ID)
	VALUES
		('player1', 'Noah', 'Roerig', 'MALE', 'noahr1936@gmail.com', '2001-02-21', '2023_1', null, (SELECT id FROM new_organization)),
		('player2', 'Stevan', 'Perrino', 'MALE', 'stevanp1936@gmail.com', '2001-02-21', '2024_1', null, (SELECT id FROM new_organization)),
		('player3', 'Jacob', 'Hropoff', 'MALE', 'jacobh1936@gmail.com', '2001-02-21', '2024_1', null, (SELECT id FROM new_organization)),
		('player4', 'Jimmy', 'Canon', 'MALE', 'jimmyc1936@gmail.com', '2001-02-21', '2024_1', null, (SELECT id FROM new_organization))
)
INSERT INTO team_roster (player_AUTH_ID, team_ID, ROLE)
VALUES
	('player1', 12, 'CAPTAIN'),
	('player2', 12, 'PLAYER'),
	('player3', 10, 'PLAYER'),
	('player4', 10, 'PLAYER');

INSERT INTO tournament_game (GAME_DATE, LOCATION, LOCATION_DETAILS, LEVEL, ROUND, HOME_TEAM_ID, AWAY_TEAM_ID, tournament_ID) 
VALUES (null, "gcu", null, 1, 1, 4, 10, 2);

INSERT INTO poc_organization_email_list(email_address, organization_id)
VALUES ('noahr1936@gmail.com', '03503875-f4a2-49f6-bb9f-e9a22fb852d4');

DELETE FROM admin;
DELETE FROM player;
DELETE FROM organization;
DELETE FROM team;
DELETE FROM team_roster;